// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Repositories.Models;

public partial class CarManagementContext : DbContext
{
    public CarManagementContext(DbContextOptions<CarManagementContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Car> Cars { get; set; }

    public virtual DbSet<CarType> CarTypes { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Car>(entity =>
        {
            entity.HasKey(e => e.CarId).HasName("PK__Cars__68A0340E1BEC5E3D");

            entity.HasIndex(e => e.LicensePlate, "UQ__Cars__026BC15C3F4A43EC").IsUnique();

            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.AskingPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.CarName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.CarTypeId).HasColumnName("CarTypeID");
            entity.Property(e => e.Color).HasMaxLength(30);
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.LicensePlate).HasMaxLength(20);
            entity.Property(e => e.ListingDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Make)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Model)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SellerId).HasColumnName("SellerID");
            entity.Property(e => e.Status)
                .HasMaxLength(20)
                .HasDefaultValue("Available");

            entity.HasOne(d => d.CarType).WithMany(p => p.Cars)
                .HasForeignKey(d => d.CarTypeId)
                .HasConstraintName("FK__Cars__CarTypeID__4316F928");

            entity.HasOne(d => d.Seller).WithMany(p => p.Cars)
                .HasForeignKey(d => d.SellerId)
                .HasConstraintName("FK__Cars__SellerID__440B1D61");
        });

        modelBuilder.Entity<CarType>(entity =>
        {
            entity.HasKey(e => e.CarTypeId).HasName("PK__CarTypes__2B2E84BDD57E91FF");

            entity.HasIndex(e => e.TypeName, "UQ__CarTypes__D4E7DFA8446A5308").IsUnique();

            entity.Property(e => e.CarTypeId).HasColumnName("CarTypeID");
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__Transact__55433A4BCC19FC7B");

            entity.Property(e => e.TransactionId).HasColumnName("TransactionID");
            entity.Property(e => e.BuyerId).HasColumnName("BuyerID");
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.SellingPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TransactionDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TransactionStatus)
                .HasMaxLength(20)
                .HasDefaultValue("Completed");

            entity.HasOne(d => d.Buyer).WithMany(p => p.Transactions)
                .HasForeignKey(d => d.BuyerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transacti__Buyer__49C3F6B7");

            entity.HasOne(d => d.Car).WithMany(p => p.Transactions)
                .HasForeignKey(d => d.CarId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transacti__CarID__48CFD27E");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCAC36D3A4F5");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E4F64D960F").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D105341D30EAAF").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
            entity.Property(e => e.RegistrationDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UserType)
                .HasMaxLength(20)
                .HasDefaultValue("Buyer");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}